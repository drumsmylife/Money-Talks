{"version":3,"sources":["components/NewLogo.png","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/accountReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/PlaidLogin.js","components/private-route/PrivateRoute.js","actions/accountActions.js","components/Card.js","components/dashboard/Accounts.js","components/dashboard/Dashboard.js","components/Overview.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","accounts","transactions","accountsLoading","transactionsLoading","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","errors","plaid","concat","toConsumableArray","filter","account","_id","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","react_default","a","createElement","className","src","logo","alt","style","height","width","display","Component","Landing","react_router_dom","to","borderRadius","letterSpacing","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","props","registerUser","history","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","isLoading","signUpError","signInError","emailnotfound","passwordincorrect","setItem","jwt_decode","_ref","component","rest","objectWithoutProperties","react_router","assign","render","addAccount","plaidData","getTransactions","console","log","setAccountsLoading","setTransactionsLoading","Card","total","category","checkTotal","i","Math","floor","random","Accounts","handleOnSuccess","metadata","public_token","onDeleteClick","accountData","deleteAccount","onLogoutClick","gifs","isLoaded","fetchGifs","_this2","giphyEndpoint","fetch","json","images","downsized","url","_this3","_this$props","_this$props$plaid","accountItems","map","key","marginRight","onClick","bind","institutionName","round","precision","multiplier","pow","transactionsTravel","forEach","transaction","amount","transactionsFoodandDrink","transactionsPayment","transactionsShops","transactionsTransfer","transactionsRecreation","transactionsData","accountName","date","split","react_plaid_link_button","buttonProps","plaidLinkProps","clientName","env","product","onSuccess","onScriptLoad","loaded","opacity","margin","components_Card","Fragment","dist_default","columns","title","field","defaultSort","confirm","newAccounts","delete","Dashboard","getAccounts","dashboardContent","dashboard_Accounts","background","get","jwtToken","currentTime","Date","now","exp","location","href","App","es","layout_Navbar","exact","path","private_route_PrivateRoute","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8606e4cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/NewLogo.4226549c.png\";","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const ADD_ACCOUNT = \"ADD_ACCOUNT\";\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\";\nexport const GET_ACCOUNTS = \"GET_ACCOUNTS\";\nexport const ACCOUNTS_LOADING = \"ACCOUNTS_LOADING\";\nexport const GET_TRANSACTIONS = \"GET_TRANSACTIONS\";\nexport const TRANSACTIONS_LOADING = \"TRANSACTIONS_LOADING\";\nexport const GET_BALANCE = \"GET_BALANCE\"\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import {\n    ADD_ACCOUNT,\n    DELETE_ACCOUNT,\n    GET_ACCOUNTS,\n    ACCOUNTS_LOADING,\n    GET_TRANSACTIONS,\n    TRANSACTIONS_LOADING\n  } from \"../actions/types\";\n  const initialState = {\n    accounts: [],\n    transactions: [],\n    accountsLoading: false,\n    transactionsLoading: false\n  };\n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case ACCOUNTS_LOADING:\n        return {\n          ...state,\n          accountsLoading: true\n        };\n      case ADD_ACCOUNT:\n        return {\n          ...state,\n          accounts: [action.payload, ...state.accounts]\n        };\n      case DELETE_ACCOUNT:\n        return {\n          ...state,\n          accounts: state.accounts.filter(\n            account => account._id !== action.payload\n          )\n        };\n      case GET_ACCOUNTS:\n        return {\n          ...state,\n          accounts: action.payload,\n          accountsLoading: false\n        };\n      case TRANSACTIONS_LOADING:\n        return {\n          ...state,\n          transactionsLoading: true\n        };\n      case GET_TRANSACTIONS:\n        return {\n          ...state,\n          transactions: action.payload,\n          transactionsLoading: false\n        };\n      default:\n        return state;\n    }\n  }\n  ","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nimport accountReducer from \"./accountReducer\";\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  plaid: accountReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;","import React, {Component} from 'react';\n// import { Link } from \"react-router-dom\";\nimport logo from \"../NewLogo.png\";\n\n\nclass Navbar extends Component{\n\n    render(){\n        return (\n            <nav className=\"navbar black\">\n                <div className=\"row\">\n                    \n                    <div className=\"col-md-6 logo\">\n                        <img src={logo} alt=\"Money Talk$\" style={{height:150, width:175, display:\"inline\"}}/>\n                    </div>\n                    \n                </div>\n            </nav>\n        \n        //     <nav>\n        //     <div className=\"nav-wrapper black \">\n        //     <img src={logo} alt=\"Money Talk$\" style={{height:150, width:160,}}/>\n        //       <ul id=\"nav-mobile\" className=\"left hide-on-med-and-down \">\n               \n        //       </ul>\n        //     </div>\n        //   </nav>\n                \n\n\n\n\n\n\n        );\n    }\n\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import background from \"../money.js\";\nimport \"../layout/landing.css\"; \n\n\n\n\n\n\n\nclass Landing extends Component {\n  render() {\n    return (\n      // <div className='background-image' style ={ {background: \"url(\"+bg+\")\" } }></div>\n      // <img src={logo} alt=\"Money Talk$\" style={{height:200, width:275,}}/>\n      // <ImageBackground source={background} style={{width: '100%', height: '100%'}}>\n      //   <Text>Inside</Text>\n      // </ImageBackground>\n  \n      \n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4 className=\"tagline\">\n             The Budget App For Millenials <br></br>\n             Sign In And Save That Money Bruh!\n            </h4>\n           \n            <br />\n            <div className=\"col s6 register\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable black accent-3\"\n              >\n                Register\n              </Link>\n            </div>\n            <div className=\"col s6\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large btn-flat waves-effect black white-text\"\n              >\n                Log In\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container top-buffer\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect black\">\n              <i className=\"material-icons left\">←</i> Back to\n              home\n            </Link>\n            <div className=\"col s12 register-button\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));","import React, {Component} from 'react';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            signUpError: '',\n            signInError: '',\n            errors: {}\n        };\n    }\n\n    componentDidMount () {\n       // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n        this.props.history.push(\"/dashboard\");\n      }\n    }\n  \n    componentWillReceiveProps(nextProps) {\n      if (nextProps.auth.isAuthenticated) {\n        this.props.history.push(\"/dashboard\");\n      }\n  \n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  \n    onChange = e => {\n      this.setState({ [e.target.id]: e.target.value });\n    };\n  \n    onSubmit = e => {\n      e.preventDefault();\n  \n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n  \n      this.props.loginUser(userData);\n    };\n  \n    render() {\n      const { errors } = this.state;  \n        return (\n            <div className=\"container top-buffer\">\n              <div style={{ marginTop: \"4rem\" }} className=\"row\">\n                <div className=\"col s8 offset-s2\">\n                  <Link to=\"/\" className=\"btn-flat waves-effect black\">\n                    <i className=\"material-icons left\">←</i> Back to\n                    home\n                  </Link>\n                  <div className=\"col s12 login-button\" style={{ paddingLeft: \"11.250px\" }}>\n                    <h4>\n                      <b>Login</b> below\n                    </h4>\n                    <p className=\"grey-text text-darken-1\">\n                      Don't have an account? <Link to=\"/register\">Register</Link>\n                    </p>\n                  </div>\n                  <form noValidate onSubmit={this.onSubmit}>\n                    <div className=\"input-field col s12\">\n                      <input\n                        onChange={this.onChange}\n                        value={this.state.email}\n                        error={errors.email}\n                        id=\"email\"\n                        type=\"email\"\n                        className={classnames(\"\", {\n                          invalid: errors.email || errors.emailnotfound\n                        })}\n                      />\n                      <label htmlFor=\"email\">Email</label>\n                      <span className=\"red-text\">\n                        {errors.email}\n                        {errors.emailnotfound}\n                      </span>\n                    </div>\n                    <div className=\"input-field col s12\">\n                      <input\n                        onChange={this.onChange}\n                        value={this.state.password}\n                        error={errors.password}\n                        id=\"password\"\n                        type=\"password\"\n                        className={classnames(\"\", {\n                          invalid: errors.password || errors.passwordincorrect\n                        })}\n                      />\n                      <label htmlFor=\"password\">Password</label>\n                      <span className=\"red-text\">\n                        {errors.password}\n                        {errors.passwordincorrect}\n                      </span>\n                    </div>\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                      <button\n                        style={{\n                          width: \"150px\",\n                          borderRadius: \"3px\",\n                          letterSpacing: \"1.5px\",\n                          marginTop: \"1rem\"\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                      >\n                        Login\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          );\n        }\n      }\n      \n      Login.propTypes = {\n        loginUser: PropTypes.func.isRequired,\n        auth: PropTypes.object.isRequired,\n        errors: PropTypes.object.isRequired\n      };\n      \n      const mapStateToProps = state => ({\n        auth: state.auth,\n        errors: state.errors\n      });\n      \n      export default connect(\n        mapStateToProps,\n        { loginUser }\n      )(Login);\n      ","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import axios from \"axios\";\nimport {\n  ADD_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  ACCOUNTS_LOADING,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING,\n  GET_BALANCE\n} from \"./types\";\n// Actions will go here\n// Add account\nexport const addAccount = plaidData => dispatch => {\n    const accounts = plaidData.accounts;\n    axios\n      .post(\"/api/plaid/accounts/add\", plaidData)\n      .then(res =>\n        dispatch({\n          type: ADD_ACCOUNT,\n          payload: res.data\n        })\n      )\n      .then(data =>\n        accounts ? dispatch(getTransactions(accounts.concat(data.payload))) : null\n      )\n      .catch(err => console.log(err));\n  };\n// Delete account\nexport const deleteAccount = plaidData => dispatch => {\n    if (window.confirm(\"Are you sure you want to remove this account?\")) {\n      const id = plaidData.id;\n      const newAccounts = plaidData.accounts.filter(\n        account => account._id !== id\n      );\n      axios\n        .delete(`/api/plaid/accounts/${id}`)\n        .then(res =>\n          dispatch({\n            type: DELETE_ACCOUNT,\n            payload: id\n          })\n        )\n        .then(newAccounts ? dispatch(getTransactions(newAccounts)) : null)\n        .catch(err => console.log(err));\n    }\n  };\n// Get all accounts for specific user\nexport const getAccounts = () => dispatch => {\n    dispatch(setAccountsLoading());\n    axios\n      .get(\"/api/plaid/accounts\")\n      .then(res =>\n        dispatch({\n          type: GET_ACCOUNTS,\n          payload: res.data\n        })\n      )\n      .catch(err =>\n        dispatch({\n          type: GET_ACCOUNTS,\n          payload: null\n        })\n      );\n  };\n  // Accounts loading\n  export const setAccountsLoading = () => {\n    return {\n      type: ACCOUNTS_LOADING\n    };\n  };\n// Get Transactions\nexport const getTransactions = plaidData => dispatch => {\n    dispatch(setTransactionsLoading());\n    axios\n      .post(\"/api/plaid/accounts/transactions\", plaidData)\n      .then(res =>\n        dispatch({\n          type: GET_TRANSACTIONS,\n          payload: res.data\n        })\n      )\n      .catch(err =>\n        dispatch({\n          type: GET_TRANSACTIONS,\n          payload: null\n        })\n      );\n  };\n  // Transactions loading\n  export const setTransactionsLoading = () => {\n    return {\n      type: TRANSACTIONS_LOADING\n    };\n  };      \n\nexport const getBalance = () => dispatch => {\n  dispatch(getBalance());\n  axios\n    .get(\"/api/plaid/balance\")\n    .then(res =>\n      dispatch({\n        type: GET_BALANCE,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_BALANCE,\n        payload: null\n      })\n    );\n};\n    ","import React, {Component} from 'react';\n\n// let giphySearchTerm = \"test\";\n// const giphyEndpoint = `http://api.giphy.com/v1/gifs/search?q=${giphySearchTerm}&api_key=${giphyAPI}&limit=50`;\n\n\n\nclass Card extends Component{\n    \n    // Checks total from acounts.js and returns search term\n    checkTotal(total){\n        if (total <= 500){\n            let giphySearchTerm = \"Awesome\"\n            console.log(\"less than 500\", giphySearchTerm)\n            return giphySearchTerm\n            \n        }\n        else if (500<= total && total <= 1500){\n            let giphySearchTerm = \"Not Bad\"\n            return giphySearchTerm\n        }\n        else if (1500<= total && total <=5000){\n            let giphySearchTerm = \"Slow Down Idiot\"\n            return giphySearchTerm\n        }\n        else{\n            let giphySearchTerm = \"STOP!\"\n            return giphySearchTerm\n        }\n    }\n\n\n    \n\n\n    render(){\n        return(\n\n            <div className=\"container\">\n                <div className=\"card\" style={{width: \"18rem\"}}>\n                    {/* <img src={this.state.gifs} className=\"card-img-top\" alt=\"Gif\" /> */}\n                    <div className=\"card-body\">\n                        <h4>Category: {this.props.category}</h4>\n                        <h5>Total Spent:  $ {this.props.total}</h5>\n                        <h5>{this.checkTotal(this.props.total)}</h5>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Card;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PlaidLinkButton from \"react-plaid-link-button\";\nimport { connect } from \"react-redux\";\nimport {\n  getTransactions,\n  addAccount,\n  deleteAccount\n} from \"../../actions/accountActions\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport MaterialTable from \"material-table\"; // https://mbrn.github.io/material-table/#/\nimport Card from \"../Card\";\nlet i = Math.floor(Math.random()*50);\nconst giphyAPI = \"JXkpKRAmyWWfdABgWzYBU3qlPkzbVD2q\";\nlet giphySearchTerm = \"watch+your+money\";\n\nclass Accounts extends Component {\n  componentDidMount() {\n    const { accounts } = this.props;\n    this.props.getTransactions(accounts);\n    this.fetchGifs();\n  }\n\n  \n    \n  \n\n   \n    fetchGifs(){\n        \n        \n        const giphyEndpoint = `http://api.giphy.com/v1/gifs/search?q=${giphySearchTerm}&api_key=${giphyAPI}&limit=50`;\n        fetch(giphyEndpoint)\n        .then(res => res.json())\n        .then(gifs => {\n            console.log(gifs.data[i].images.downsized.url)\n            console.log(gifs.data.length)\n            \n            this.setState({\n                isLoaded: true,\n                gifs: gifs.data[i].images.downsized.url,\n            })\n        });\n    }\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n        gifs: [],\n        isLoaded: false\n    }\n  }  \n// Add account\n  handleOnSuccess = (token, metadata) => {\n    const { accounts } = this.props;\n    const plaidData = {\n      public_token: token,\n      metadata: metadata,\n      accounts: accounts\n    };\nthis.props.addAccount(plaidData);\n  };\n// Delete account\n  onDeleteClick = id => {\n    const { accounts } = this.props;\n    const accountData = {\n      id: id,\n      accounts: accounts\n    };\n    this.props.deleteAccount(accountData);\n  };\n// Logout\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\nrender() {\n    const { user, accounts } = this.props;\n    const { transactions, transactionsLoading } = this.props.plaid;\nlet accountItems = accounts.map(account => (\n      <li key={account._id} style={{ marginTop: \"1rem\" }}>\n        <button\n          style={{ marginRight: \"1rem\" }}\n          onClick={this.onDeleteClick.bind(this, account._id)}\n          className=\"btn btn-small btn-floating waves-effect waves-light hoverable red accent-3\"\n        >\n          <i className=\"material-icons\">delete</i>\n        </button>\n        <b>{account.institutionName}</b>\n      </li>\n    ));\n\n    //SOMEHOW NEED TO GET THE BALANCE TO SHOW LIKE TRANSACTIONS DID\n// Setting up data table\n    const transactionsColumns = [\n      { title: \"Account\", field: \"account\" },\n      { title: \"Date\", field: \"date\", type: \"date\", defaultSort: \"desc\" },\n      { title: \"Name\", field: \"name\" },\n      { title: \"Amount\", field: \"amount\" },\n      { title: \"Category\", field: \"category\" }\n    ];\n\n    function round(value, precision) {\n      var multiplier = Math.pow(10, precision || 0);\n      return Math.round(value * multiplier) / multiplier;\n  }\n\n  // let category = \"\";\n\n    let transactionsTravel = 0.00;\n    transactions.forEach(function(account) {\n      account.transactions.forEach(function(transaction) {\n        if(transaction.category[0] === 'Travel'){\n        transactionsTravel = round(transactionsTravel+transaction.amount, 2);\n        };\n      });\n    });      \n        console.log(\"This is Travel:\", transactionsTravel);\n\n    let transactionsFoodandDrink = 0.00;\n    transactions.forEach(function(account) {\n      account.transactions.forEach(function(transaction) {\n        if(transaction.category[0] === 'Food and Drink'){\n          transactionsFoodandDrink = round(transactionsFoodandDrink+transaction.amount, 2);\n          };\n      });\n    });\n    console.log(\"This is Food and Drinks:\", transactionsFoodandDrink);\n\n    let transactionsPayment = 0.00;\n    transactions.forEach(function(account) {\n      account.transactions.forEach(function(transaction) {\n        if(transaction.category[0] === 'Payment'){\n          transactionsPayment = round(transactionsPayment+transaction.amount, 2);\n          };\n      });\n    });\n    console.log(\"This is payment:\", transactionsPayment);\n\n    let transactionsShops = 0.00;\n    transactions.forEach(function(account) {\n      account.transactions.forEach(function(transaction) {\n        if(transaction.category[0] === 'Shops'){\n          transactionsShops = round(transactionsShops+transaction.amount, 2);\n          };\n      });\n    });\n    console.log(\"This is Shops:\",transactionsShops);\n\n    let transactionsTransfer = 0.00;\n    transactions.forEach(function(account) {\n      account.transactions.forEach(function(transaction) {\n        if(transaction.category[0] === 'Transfer'){\n          transactionsTransfer = round(transactionsTransfer+transaction.amount, 2);\n          };\n        \n      });\n    });\n    console.log(\"This is Transfer\",transactionsTransfer);\n\n    let transactionsRecreation = 0.00;\n    transactions.forEach(function(account) {\n      account.transactions.forEach(function(transaction) {\n        if(transaction.category[0] === 'Recreation'){\n          transactionsRecreation = round(transactionsRecreation+transaction.amount, 2);\n        };\n      });\n    });\n    console.log(\"This is Recreation:\", transactionsRecreation);\n\nlet transactionsData = [];\n    transactions.forEach(function(account) {\n      account.transactions.forEach(function(transaction) {\n        transactionsData.push({\n          account: account.accountName,\n          date: transaction.date,\n          category: transaction.category[0],\n          name: transaction.name,\n          amount: transaction.amount\n        });\n      });\n    });\nreturn (\n    <div className=\"container top-buffer\">\n      \n      <div className=\"row\">\n        <div className=\"col s12\">\n          <button\n            onClick={this.onLogoutClick}\n            className=\"btn-flat waves-effect black\"\n          >\n            <i className=\"material-icons left\">←</i> Log Out\n          </button>\n          <br/><br/>\n\n          <div className=\"col s12 app-greet\">\n          <h4>\n            <b>Welcome!</b>\n          </h4>\n          <p className=\"black-text text-darken-1\">\n            Hey there, {user.name.split(\" \")[0]}\n          </p>\n          \n          <h5>\n            <b>Linked Accounts</b>\n          </h5>\n          <p className=\"black-text text-darken-1\">\n            Add or remove your bank accounts below\n          </p>\n          <ul>{accountItems}</ul>\n          <PlaidLinkButton\n            buttonProps={{\n              className:\n                \"btn btn-large waves-effect waves-light hoverable blue accent-3 main-btn\"\n            }}\n            plaidLinkProps={{\n              clientName: \"MoneyTalks\",\n              key: \"d91f183971b1a8d257dfcdcffe2cd3\",\n              env: \"sandbox\",\n              product: [\"transactions\"],\n              onSuccess: this.handleOnSuccess\n            }}\n            onScriptLoad={() => this.setState({ loaded: true })}\n          >\n            Add Account\n          </PlaidLinkButton>\n          <hr style={{ marginTop: \"2rem\", opacity: \".2\" }} />\n          <div className=\"row\" >\n            <img src={this.state.gifs} alt=\"gif\" style={{ margin:\"auto\"}}/>\n          </div>\n          \n          <div className=\"row\">\n            <div className=\"col-md-5\">\n              <Card total={transactionsRecreation} category={\"Recreation\"}/>\n              <Card total={transactionsTravel} category={\"Travel\"}/>\n              <Card total={transactionsTransfer} category={\"Transfer\"}/>\n            </div>\n            <div className=\"col-md-5\">\n              <Card total={transactionsPayment} category={\"Payment\"}/>\n              <Card total={transactionsShops} category={\"Shops\"}/>\n              <Card total={transactionsFoodandDrink} category={\"Food and Drink\"}/>\n            </div>\n          </div>\n          <br/><br/>\n          <h5>\n            <b>Transactions</b>\n          </h5>\n          {transactionsLoading ? (\n            <p className=\"grey-text text-darken-1\">Fetching transactions...</p>\n          ) : (\n            <>\n              <p className=\"grey-text text-darken-1\">\n                You have <b>{transactionsData.length}</b> transactions from your\n                <b> {accounts.length}</b> linked\n                {accounts.length > 1 ? (\n                  <span> accounts </span>\n                ) : (\n                  <span> account </span>\n                )}\n                from the past 30 days\n              </p>\n              <MaterialTable\n                columns={transactionsColumns}\n                data={transactionsData}\n                title=\"Search Transactions\"\n              />\n            </>\n          )}\n        </div>\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\nAccounts.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  getTransactions: PropTypes.func.isRequired,\n  addAccount: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  accounts: PropTypes.array.isRequired,\n  plaid: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  plaid: state.plaid\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser, getTransactions, addAccount, deleteAccount }\n)(Accounts);","import React, { Component } from \"react\";\nimport PlaidLinkButton from \"react-plaid-link-button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getAccounts, addAccount } from \"../../actions/accountActions\";\nimport Accounts from \"./Accounts\";\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getAccounts();\n  }\n// Logout\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n// Add account\n  handleOnSuccess = (token, metadata) => {\n    const plaidData = {\n      public_token: token,\n      metadata: metadata\n    };\nthis.props.addAccount(plaidData);\n  };\nrender() {\n    const { user } = this.props.auth;\n    const { accounts, accountsLoading } = this.props.plaid;\nlet dashboardContent;\nif (accounts === null || accountsLoading) {\n      dashboardContent = <p className=\"center-align\">Loading...</p>;\n    } else if (accounts.length > 0) {\n      // User has accounts linked\n      dashboardContent = <Accounts user={user} accounts={accounts} />;\n    } else {\n      // User has no accounts linked\n      dashboardContent = (\n        \n        <div className=\"row\">\n          \n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Welcome,</b> {user.name.split(\" \")[0]}\n            </h4>\n            <p className=\"flow-text grey-text text-darken-1\" style={{background: \"white\", opacity:.75, width: 600, margin:\"auto\"}}>\n              To get started, link your first bank account below\n            </p>\n            <div>\n              <PlaidLinkButton\n                buttonProps={{\n                  className:\n                    \"btn btn-large waves-effect waves-light hoverable blue accent-3 main-btn\"\n                }}\n                plaidLinkProps={{\n                  clientName: \"MoneyTalks\",\n                  key: \"d91f183971b1a8d257dfcdcffe2cd3\",\n                  env: \"sandbox\",\n                  product: [\"transactions\"],\n                  onSuccess: this.handleOnSuccess\n                }}\n                onScriptLoad={() => this.setState({ loaded: true })}\n              >\n                Link Account\n              </PlaidLinkButton>\n            </div>\n            <button\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable red accent-3 main-btn\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      );\n    }\nreturn <div className=\"container\">{dashboardContent}</div>;\n  }\n}\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  getAccounts: PropTypes.func.isRequired,\n  addAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  plaid: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  plaid: state.plaid\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser, getAccounts, addAccount }\n)(Dashboard);\n","import React, {Component} from 'react';\n\nclass Overview extends Component{\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Graph will go here</h1>\n                </div>\n                <div className=\"row\">\n                    <h1>Top spending will go here</h1>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Overview","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/PlaidLogin\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\n// import logo from \"./components.NewLogo\";\nimport Overview from \"./components/Overview\";\n\nimport \"./App.css\";\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <br /><br /><br/>\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <div className=\"container\">\n            </div>\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\n    \n\nexport default App;\n\n\n// class App extends Component {\n//   render() {\n//     return(\n//       <div className=\"container\">\n//         <span><Navbar/></span>\n//         <Login/>\n//         <Overview/>\n//         <Signup/>\n//         <br/><br/><br/>\n//         <Gif/>\n//       </div>\n//     )\n//   }\n// }\n\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}